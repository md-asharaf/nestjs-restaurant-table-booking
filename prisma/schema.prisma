generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  OWNER
}

enum Status {
  CANCELLED
  ACTIVE
  COMPLETED
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userAgent String
  ipAddress String
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  email        String        @unique
  password     String
  fullname     String
  isVerified   Boolean       @default(false)
  role         Role          @default(USER)
  sessions     Session[]
  restaurants  Restaurant[]
  reservations Reservation[]
}

model Reservation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  start  DateTime
  end    DateTime
  seats  Int
  status Status   @default(ACTIVE)

  userId       Int
  user         User       @relation(fields: [userId], references: [id])
  restaurantId Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model Restaurant {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  location     String
  capacity     Int
  reservations Reservation[]
  ownerId      Int
  owner        User          @relation(fields: [ownerId], references: [id])
  cuisines     Cuisine[]     @relation("RestaurantCuisines")

  @@unique([name, location])
}

model Cuisine {
  id   Int    @id @default(autoincrement())
  name String @unique

  restaurants Restaurant[] @relation("RestaurantCuisines")
}
